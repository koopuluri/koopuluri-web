<!DOCTYPE html>
<html>
	<head>
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta charset="utf-8" />
		<link rel="stylesheet" type="text/css" href="css/ulysses.css" />
		<title>Xnote Learnings</title>
	</head>
<body>
<h1>Xnote Learnings</h1>

<p><strong>Overview</strong>: </p>

<p>Xnote was a platform that allowed people to easily discuss content through collaborative annotation. </p>

<p><strong>Motivation</strong>:</p>

<p>Right now if I was sharing an article and wanted a friend to read a particular paragraph because it was relevant to our conversation, I’d send them the link via email / Facebook Messenger, tell them to check out paragraph 3, and tell me what they think. </p>

<p>They would open that article via the link, scroll down to the paragraph that I referenced, read, and then revert back to the app that we were communicating on, and give me their input. </p>

<p>This might seem like a minor inconvenience, but when I re-read content in the future, in order to get back the thoughts we discussed about it, I have to do a painful search through chat history.</p>

<p><a href="http://koopuluri.com/xnote">Xnote</a> would make this much more efficient. Now, I’d be able to annotate everything I read, and send friends specific annotations via a link that when clicked on, would scroll to my highlight and super-impose my annotation on their screen. They could then add a note to my highlight or take highlights of their own. </p>

<p>It would work across platforms seamlessly - Android, web, and let us discuss content in a richer manner, that retained value even when we decided to re-visit the content much later.</p>

<p>What follows are a few things I learned through the process. </p>

<h2>Prepare for a Longer Timeline</h2>

<p>When I started this project (in February 2015), I had the intention of working on it till the end of the summer, and only continuing if Xnote was growing well. This gave the project 5 months to take off. </p>

<p>We ended up needing a couple of months for developing the first version. This led to very little time to have enough feedback cycles.</p>

<p>The graph of what this usually looks like:</p>

<figure><img src="gobble_growth.png"/></figure>

<p>(Credit: Ooshma Garg @ Gobble during her talk)</p>

<p>After a year post-launch, Gobble hadn’t reached any level of growth. This isn’t an uncommon thing to see.</p>

<p><strong>It can take a long time to reach any level of growth.</strong> Setting up a feedback loop as early as possible is important, and once that’s done, it can take many cycles to reach a solution that’s widely useful.</p>

<p>I ignored this. I wanted to see rapid growth soon, and felt that if I didn’t, then the product wasn’t really useful. </p>

<p>Sure there’s no validator quite like growth, but that rarely occurs immediately, and until that arrives, there has to be something that I believe about the product that convinces me to keep pushing. </p>

<p><strong>From now on, I only want to work on something I care about a lot; that I really want to see become a reality.</strong></p>

<p>I underestimated the mental side of things. It can be tough to launch a product, talk to users, get feedback, move fast enough to make the money last, and handle many un-anticipated challenges that arise in the process of building something. </p>

<p>Caring about what I’m trying to do is an unmeasurable, necessary positive force; one that I can rely on with more confidence during difficult times - much more than some kind of financial incentive.</p>

<h2>Have Clear Goals / Milestones</h2>

<p>As I mentioned earlier, there was no clear description of the milestone that we had to reach in order to continue working on it. </p>

<p>Having a measurable goal(s) makes it easier to plan the path to reach it. </p>

<h2>Team Dynamic</h2>

<p><a href="https://www.linkedin.com/in/vigneshprasad">Viggy</a> started helping out with Xnote a few weeks after I had started working on it. I recognized that he was a quick learner and interested in the product, but his technical competence was a little rough. This was his first software project.</p>

<p>When bringing a new person on to the team, there’s a cost involved. In this scenario, I had the responsibility of explaining to Viggy the vision, and the path that I had in mind to get there. </p>

<p>I have a (bad) habit of setting <a href="http://www.koopuluri.com/aggressive-deadlines">aggressive deadlines</a>.</p>

<p>I had previously set an aggressive deadline. The correct move in this scenario would have been to relax the deadline a little bit so that I could spend more time providing guidance. But instead, I chose to stick to the deadline. </p>

<p>This lead to some, then unexpected, consequences:</p>

<p>First of all, it affected the way we divided work. Ideally, we would divide the work in a way that our dependency on each other is minimized. That kind of division wouldn’t work in this scenario because of Viggy’s lack of experience developing something before. He would take a while (and rightly so) to develop features initially. So we structured work in a way that I would lay down the major frameworks and design patterns (eg. chose React, Flux architecture for the front-end, and the backend), and Viggy would follow by developing features on top of the architecture. </p>

<p>Eventually he took ownership of many front-end features while I focused on the back-end. This helped us move much quicker, and also kept us more motivated. Ownership is important in developing a product. People work the best when they take pride in what they’re doing. Not having a clear product / feature to take pride in, can reduce excitement and motivation to do great work. </p>

<p>I could have done a much better job creating that kind of ownership much earlier in the process.</p>

<p>Overly aggressive deadlines also cause a constant feeling of not being able to keep up with the timeline. That might be OK when working alone, or when everyone is working on completely independent parts, but once you have a level of dependency, then this isn’t healthy because it causes a culture in which it’s difficult to rely on others. </p>

<h2>Gauging whether People needed this product was difficult:</h2>

<p>I would randomly pitch to people at coffee shops around the Georgia Tech and Berkeley campuses. Something I noticed is that it’s really difficult to get good feedback - it’s usually either too optimistic, or pessimistic. </p>

<p><strong>It was difficult to gauge whether the product was useful for people</strong>. This is why it makes it much easier to develop a product when the founders have a strong need for their own product. I believe the first milestone is finding just one person that terribly needs to the product. And if one of the founders needs what they’re building, it becomes easy to see how to evolve the product. </p>

<p>Why was this so difficult? In another post, I want to explore at the beginning stages of successful consumer companies and understand how they were willing to take a bet on their products. This is one of the most difficult parts of product development, and might continue to be that way for a long time, but I think it’s important to understand why this can be difficult.</p>

<h2>Ignored Reflecting</h2>

<p>Once we decided to stop working on Xnote, we didn’t talk about it until a few months after. We failed to sit down and reflect deeply about why this didn’t work out, and what lessons we took away from this experience. </p>

<p>It’s human nature to try and brush past failures. After all, not thinking about them is a good way to move forward onto the next thing. But it takes away a lot of the value in failing. I’m in the process of taking a step back and objectively analyzing my failures. It’s tough, but it needs to be done.</p>

<p>The main issue with waiting so long to discuss / think about a failed project is that a lot of the issues aren’t fresh in my mind. I also see the value of taking time to let everything sink in before analyzing. But I believe having the details fresh in the mind is important. So perhaps reviewing immediately after and then after a few months / years is a good approach to maximize learning from past projects.</p>

<h2>More:</h2>

<p>I was excited to hear that Viggy chose to go to Tilt for a summer internship (2016). We had a great journey working on Xnote. He’s one of the quickest learners I know, and I’m confident he’ll do great things moving forward. Perhaps we’ll work together again…</p>

<p>There were many more things that I learned during this process and I’ll continue to update this post with them as I write them down. </p>

<h2>Notes to self:</h2>

<p>This post touches on a variety of topics. It might be better to divide into separate posts.</p>

</body>
</html>
